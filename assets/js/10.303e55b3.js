(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{327:function(t,e,s){"use strict";s.r(e);var a=s(33),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"类型推论-type-inference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型推论-type-inference"}},[t._v("#")]),t._v(" 类型推论 (Type Inference)")]),t._v(" "),s("p",[t._v("如果没有明确的指定类型，那么 "),s("code",[t._v("TypeScript")]),t._v(" 就会依据类型推论规则推断出一个类型。")]),t._v(" "),s("h2",{attrs:{id:"什么是类型推论"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是类型推论"}},[t._v("#")]),t._v(" 什么是类型推论")]),t._v(" "),s("p",[t._v("以下代码虽然没有指定类型，但在编译时会报错")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Allen Yu'")]),t._v("\nmyName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v("\n")])])]),s("p",[t._v("事实上，它和以下代码等价：")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Allen Yu'")]),t._v("\nmyName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v("\n")])])]),s("p",[s("code",[t._v("TypeScript")]),t._v(" 会在没有明确指定类型时，推测出一个类型，这就是类型推论")]),t._v(" "),s("p",[s("strong",[t._v("如果定义变量的时候没有赋值，也没有定义类型，就会被推断为 "),s("code",[t._v("any")]),t._v(" 类型而完全不被类型检查")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myName\nmyName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("\nmyName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Allen Yu'")]),t._v("\n")])])]),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://ts.xcatliu.com/basics/type-inference",target:"_blank",rel:"noopener noreferrer"}},[t._v("TypeScript 入门教程 - 类型推论"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.tslang.cn/docs/handbook/type-inference.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("TypeScript 中文网 - 类型推论"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=r.exports}}]);